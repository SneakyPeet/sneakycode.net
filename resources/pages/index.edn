{:title "SneakyCode"
 :no-section? true
 :no-menu? true

 :hero
 (fn [_]
   [:div.hero
    [:div.hero-body
     [:div.container
      [:h1.title "sneakycode"]
      [:h2.subtitle "pieter koornhof on clean-code, clojure and ddd"]]]])


 :titled-column
 (fn [title content & classes]
   [:div.column.is-half-tablet.is-half-desktop.is-one-quarter-widescreen.is-paddingless
    {:class
     (clojure.string/join " " classes)}
    [:div.columns.is-mobile.is-gapless.tiled-column-container
     [:div.column.is-1.titled-column [:div.titled-column-text.has-text-weight-light title]]
     [:div.column content]]])


 :post-tile
 (fn [{:keys [title slug date]}]
   [:div.post-item
    [:a.subtitle.has-text-weight-light {:href (sneakycode.config/url slug)}
     [:span title]
     [:br]
     [:span.tag.is-small date]]])


 :recent-posts
 (fn [{:keys [all-posts post-tile] :as page}]
   (let [posts (->> all-posts
                    (filter #(not (:draft? %)))
                    (sort-by :date)
                    reverse
                    (take 4)
                    (map post-tile))]
     [:article
      posts
      [:div
       [:a.button.is-primary.is-outlined.is-small {:href (sneakycode.config/url "all-posts")} "read more"]]]))


 :my-projects
 (fn [_]
   (let [projects
         [{:n "simply.co.za" :l "https://simply.co.za"
           :d "My day job, where we try and improve the financial futures of millions"
           :t ["clojure_alt" "nodejs_small" "react" "google-cloud-platform"]}
          {:n "Gitlab TV" :l "https://sneakypeet.github.io/gitlab-tv/" :g "https://github.com/SneakyPeet/gitlab-tv"
           :d "A TV for watching gitlab ci pipelines"
           :t ["clojure_alt"]}
          #_{:n "P5 CLJS Starter" :l "https://github.com/SneakyPeet/p5js-cljs-starter"
           :d "A Figwheel project template for building P5.js drawings using clojurescript"
           :t ["clojure_alt"]}
          {:n "bucks" :l "https://sneakypeet.github.io/bucks/" :g "https://github.com/sneakypeet/bucks"
           :d "An app that tells me about my financial well being"
           :t ["clojure_alt" "react" "css3"]}
          {:n "moola-bank" :l "http://www.moola-bank.me/"
           :d "A budgeting app for young kids"
           :t ["clojure_alt" "react" "sass"]}
          {:n "sneakycode.net" :l "https://sneakycode.net/" :g "https://github.com/sneakypeet/sneakycode.net"
           :d "This website, statically generated using clojure, stasis and bulma/sass"
           :t ["clojure_alt" "sass"]}]]
     (->> projects
          (map
           (fn [{:keys [n l d t g]}]
             [
              [:div.timeline-item.is-primary
               [:div.timeline-marker.is-primary.is-icon
                (if g [:i.fa.fa-github] [:i.fa.fa-link])]
               [:div.timeline-content
                [:p.heading.is-size-6
                 [:a {:href l :target "_blank"} n]
                 (when g
                   [:a.github {:href g :target "_blank"} [:i.fa.fa-github]])]


                [:p
                 (map (fn [i] [:span {:class (str "devicons devicons-" i)}] ) t)]
                [:p.is-size-7 d]]]]))
          (reduce into)
          (into [:div.timeline.my-projects
                 [:header.timeline-header
                  [:span.tag.is-rounded
                   [:i.fa.fa-git-square]]]]))))

                                        ;https://worldvectorlogo.com/search/pubsub
 :my-tools
 (fn [_]
   (let [icons [["clojure_alt" "Clojure"]
                ["nodejs_small" "Node"]
                ["google-cloud-platform" "Google Cloud Platform"]
                ["react" "React"]
                ["code" "Spacemacs"]
                ["git" "Git"]]]
     (into
      [:div.columns.is-multiline.is-mobile.my-tools]
      (->> icons
           (map
            (fn [[i t]]
              [:div.column.is-one-third.has-text-centered.tooltip.is-tooltip-primary
               {:data-tooltip t}
               [:span {:class (str "devicons devicons-" i)}]]))))))


 :about-me
 (fn [_]
   (let [info ["Software Engineer"
               "Clojure Fanboy"
               "Father of 4"
               "African"]]
     [:article
      [:div.card-image
       [:figure.image.is-2by3.profile-photo
        [:img.profile-photo {:alt "Me" :src (sneakycode.config/url "/profile-min.png")}]
        (into [:ul]
              (->> info
                   (sort-by count)
                   reverse
                   (map #(vec [:li %]))))]]]))


 :content
 (fn [{:keys [hero about-me recent-posts my-projects my-tools titled-column] :as page}]
   [:div.index
    (hero page)
    [:div.section
     [:div.columns.is-multiline
      (titled-column "recent posts" (recent-posts page))
      (titled-column "work" (my-projects page) "column-hidden-tab-to-desk")
      (titled-column "tools" (my-tools page))
      (titled-column "projects" (my-projects page) "column-visible-tab-to-desk")
      (titled-column "me" (about-me page))
      ]]])}
